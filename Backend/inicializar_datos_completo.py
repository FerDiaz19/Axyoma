#!/usr/bin/env python
import os
import django
from datetime import datetime, timedelta

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from django.contrib.auth.models import User
from apps.users.models import PerfilUsuario, Empresa, Planta, Departamento, Puesto, Empleado
from apps.subscriptions.models import PlanSuscripcion, SuscripcionEmpresa
from apps.evaluaciones.models import TipoEvaluacion, EvaluacionCompleta, AsignacionEvaluacion, TokenEvaluacion
from rest_framework.authtoken.models import Token
from django.db import transaction

def limpiar_base_datos():
    """Limpiar toda la base de datos"""
    print('üßπ LIMPIANDO BASE DE DATOS...')
    
    # Eliminar en orden para evitar problemas de foreign keys
    TokenEvaluacion.objects.all().delete()
    AsignacionEvaluacion.objects.all().delete()
    EvaluacionCompleta.objects.all().delete()
    TipoEvaluacion.objects.all().delete()
    SuscripcionEmpresa.objects.all().delete()
    PlanSuscripcion.objects.all().delete()
    Empleado.objects.all().delete()
    Puesto.objects.all().delete()
    Departamento.objects.all().delete()
    Planta.objects.all().delete()
    PerfilUsuario.objects.all().delete()
    Token.objects.all().delete()
    User.objects.all().delete()
    Empresa.objects.all().delete()
    
    print('‚úÖ Base de datos limpiada exitosamente')

def crear_datos_iniciales():
    """Crear datos completos de inicio para Axyoma"""
    print('üöÄ CREANDO DATOS INICIALES PARA AXYOMA...')
    
    with transaction.atomic():
        # 1. Crear SuperAdmin
        print('üë§ Creando SuperAdmin...')
        superadmin_user = User.objects.create_user(
            username='superadmin',
            password='admin123',
            email='superadmin@axyoma.com',
            first_name='Super',
            last_name='Admin',
            is_superuser=True,
            is_staff=True
        )
        
        superadmin_profile = PerfilUsuario.objects.create(
            user=superadmin_user,
            nivel_usuario='SuperAdmin',
            fecha_registro=datetime.now()
        )
        
        # Crear token para SuperAdmin
        Token.objects.create(user=superadmin_user)
        
        # 2. Crear Empresa Axyoma
        print('üè¢ Creando Empresa Axyoma...')
        empresa_axyoma = Empresa.objects.create(
            nombre='Axyoma',
            rfc='AXY123456789',
            telefono='555-0123',
            correo='contacto@axyoma.com',
            direccion='Av. Innovaci√≥n 123, Ciudad de M√©xico',
            fecha_registro=datetime.now(),
            status=True
        )
        
        # 3. Crear Admin de Empresa
        print('üë• Creando Admin de Empresa...')
        admin_user = User.objects.create_user(
            username='admin_axyoma',
            password='admin123',
            email='admin@axyoma.com',
            first_name='Admin',
            last_name='Axyoma'
        )
        
        admin_profile = PerfilUsuario.objects.create(
            user=admin_user,
            nivel_usuario='AdminEmpresa',
            admin_empresa=empresa_axyoma.empresa_id,
            fecha_registro=datetime.now()
        )
        
        # Actualizar empresa con administrador
        empresa_axyoma.administrador = admin_user.id
        empresa_axyoma.save()
        
        Token.objects.create(user=admin_user)
        
        # 4. Crear Plantas
        print('üè≠ Creando Plantas...')
        planta_norte = Planta.objects.create(
            nombre='Planta Norte',
            empresa=empresa_axyoma.empresa_id,
            telefono='555-0124',
            correo='norte@axyoma.com',
            direccion='Zona Industrial Norte, Monterrey',
            fecha_registro=datetime.now(),
            status=True
        )
        
        planta_sur = Planta.objects.create(
            nombre='Planta Sur',
            empresa=empresa_axyoma.empresa_id,
            telefono='555-0125',
            correo='sur@axyoma.com',
            direccion='Zona Industrial Sur, Guadalajara',
            fecha_registro=datetime.now(),
            status=True
        )
        
        plantas = [planta_norte, planta_sur]
        
        # 5. Crear usuarios de planta
        print('üë∑ Creando Usuarios de Planta...')
        for i, planta in enumerate(plantas, 1):
            user_planta = User.objects.create_user(
                username=f'planta_{planta.planta_id}',
                password='planta123',
                email=f'planta{i}@axyoma.com',
                first_name=f'Usuario',
                last_name=f'Planta {i}'
            )
            
            PerfilUsuario.objects.create(
                user=user_planta,
                nivel_usuario='AdminPlanta',
                admin_empresa=empresa_axyoma.empresa_id,
                planta_asignada=planta.planta_id,
                fecha_registro=datetime.now()
            )
            
            Token.objects.create(user=user_planta)
            
            # Actualizar username de la planta
            planta.username = user_planta.username
            planta.save()
        
        # 6. Crear Departamentos
        print('üè¢ Creando Departamentos...')
        departamentos_data = [
            {'nombre': 'Recursos Humanos', 'planta': planta_norte},
            {'nombre': 'Producci√≥n', 'planta': planta_norte},
            {'nombre': 'Control de Calidad', 'planta': planta_norte},
            {'nombre': 'Mantenimiento', 'planta': planta_sur},
            {'nombre': 'Log√≠stica', 'planta': planta_sur},
            {'nombre': 'Seguridad Industrial', 'planta': planta_sur}
        ]
        
        departamentos = []
        for dept_data in departamentos_data:
            departamento = Departamento.objects.create(
                nombre=dept_data['nombre'],
                planta=dept_data['planta'].planta_id,
                fecha_registro=datetime.now(),
                status=True
            )
            departamentos.append(departamento)
        
        # 7. Crear Puestos
        print('üíº Creando Puestos...')
        puestos_data = [
            # Recursos Humanos
            {'nombre': 'Gerente de RRHH', 'descripcion': 'Gesti√≥n del personal', 'departamento': departamentos[0]},
            {'nombre': 'Analista de RRHH', 'descripcion': 'An√°lisis y procesos de personal', 'departamento': departamentos[0]},
            # Producci√≥n
            {'nombre': 'Jefe de Producci√≥n', 'descripcion': 'Supervisi√≥n de procesos productivos', 'departamento': departamentos[1]},
            {'nombre': 'Operador de M√°quina', 'descripcion': 'Operaci√≥n de equipos de producci√≥n', 'departamento': departamentos[1]},
            {'nombre': 'T√©cnico de Proceso', 'descripcion': 'Optimizaci√≥n de procesos', 'departamento': departamentos[1]},
            # Control de Calidad
            {'nombre': 'Supervisor de Calidad', 'descripcion': 'Control y aseguramiento de calidad', 'departamento': departamentos[2]},
            {'nombre': 'Inspector de Calidad', 'descripcion': 'Inspecci√≥n de productos', 'departamento': departamentos[2]},
            # Mantenimiento
            {'nombre': 'Jefe de Mantenimiento', 'descripcion': 'Coordinaci√≥n de mantenimiento', 'departamento': departamentos[3]},
            {'nombre': 'T√©cnico Mec√°nico', 'descripcion': 'Mantenimiento mec√°nico', 'departamento': departamentos[3]},
            # Log√≠stica
            {'nombre': 'Coordinador Log√≠stico', 'descripcion': 'Gesti√≥n de inventarios y env√≠os', 'departamento': departamentos[4]},
            # Seguridad Industrial
            {'nombre': 'Jefe de Seguridad', 'descripcion': 'Supervisi√≥n de seguridad industrial', 'departamento': departamentos[5]}
        ]
        
        puestos = []
        for puesto_data in puestos_data:
            puesto = Puesto.objects.create(
                nombre=puesto_data['nombre'],
                descripcion=puesto_data['descripcion'],
                departamento=puesto_data['departamento'].departamento_id,
                fecha_registro=datetime.now(),
                status=True
            )
            puestos.append(puesto)
        
        # 8. Crear Empleados
        print('üë®‚Äçüíº Creando Empleados...')
        empleados_data = [
            {'numero': 'EMP001', 'nombre': 'Juan', 'apellido': 'P√©rez', 'email': 'juan.perez@axyoma.com', 'telefono': '555-1001', 'puesto': puestos[0]},
            {'numero': 'EMP002', 'nombre': 'Mar√≠a', 'apellido': 'Gonz√°lez', 'email': 'maria.gonzalez@axyoma.com', 'telefono': '555-1002', 'puesto': puestos[1]},
            {'numero': 'EMP003', 'nombre': 'Carlos', 'apellido': 'L√≥pez', 'email': 'carlos.lopez@axyoma.com', 'telefono': '555-1003', 'puesto': puestos[2]},
            {'numero': 'EMP004', 'nombre': 'Ana', 'apellido': 'Mart√≠nez', 'email': 'ana.martinez@axyoma.com', 'telefono': '555-1004', 'puesto': puestos[3]},
            {'numero': 'EMP005', 'nombre': 'Luis', 'apellido': 'Rodr√≠guez', 'email': 'luis.rodriguez@axyoma.com', 'telefono': '555-1005', 'puesto': puestos[4]},
            {'numero': 'EMP006', 'nombre': 'Carmen', 'apellido': 'Hern√°ndez', 'email': 'carmen.hernandez@axyoma.com', 'telefono': '555-1006', 'puesto': puestos[5]},
            {'numero': 'EMP007', 'nombre': 'Miguel', 'apellido': 'Torres', 'email': 'miguel.torres@axyoma.com', 'telefono': '555-1007', 'puesto': puestos[6]},
            {'numero': 'EMP008', 'nombre': 'Laura', 'apellido': 'Ram√≠rez', 'email': 'laura.ramirez@axyoma.com', 'telefono': '555-1008', 'puesto': puestos[7]},
            {'numero': 'EMP009', 'nombre': 'Jos√©', 'apellido': 'Flores', 'email': 'jose.flores@axyoma.com', 'telefono': '555-1009', 'puesto': puestos[8]},
            {'numero': 'EMP010', 'nombre': 'Patricia', 'apellido': 'Cruz', 'email': 'patricia.cruz@axyoma.com', 'telefono': '555-1010', 'puesto': puestos[9]},
            {'numero': 'EMP011', 'nombre': 'Roberto', 'apellido': 'Morales', 'email': 'roberto.morales@axyoma.com', 'telefono': '555-1011', 'puesto': puestos[10]}
        ]
        
        empleados = []
        for emp_data in empleados_data:
            empleado = Empleado.objects.create(
                numero_empleado=emp_data['numero'],
                nombre=emp_data['nombre'],
                apellido=emp_data['apellido'],
                email=emp_data['email'],
                telefono=emp_data['telefono'],
                puesto=emp_data['puesto'].puesto_id,
                fecha_registro=datetime.now(),
                status=True
            )
            empleados.append(empleado)
        
        # 9. Crear Planes de Suscripci√≥n
        print('üí≥ Creando Planes de Suscripci√≥n...')
        plan_basico = PlanSuscripcion.objects.create(
            nombre='Plan B√°sico',
            descripcion='Hasta 50 empleados, evaluaciones b√°sicas',
            duracion=30,  # 30 d√≠as
            precio=999.00,
            status=True
        )
        
        plan_profesional = PlanSuscripcion.objects.create(
            nombre='Plan Profesional',
            descripcion='Hasta 200 empleados, evaluaciones avanzadas',
            duracion=30,  # 30 d√≠as
            precio=2999.00,
            status=True
        )
        
        plan_empresarial = PlanSuscripcion.objects.create(
            nombre='Plan Empresarial',
            descripcion='Empleados ilimitados, todas las funciones',
            duracion=30,  # 30 d√≠as
            precio=5999.00,
            status=True
        )
        
        # 10. Crear Suscripci√≥n para Axyoma
        print('üìã Creando Suscripci√≥n para Axyoma...')
        fecha_inicio = datetime.now()
        fecha_fin = fecha_inicio + timedelta(days=365)  # 1 a√±o
        
        suscripcion = SuscripcionEmpresa.objects.create(
            empresa=empresa_axyoma.empresa_id,
            plan=plan_empresarial.plan_id,
            fecha_inicio=fecha_inicio,
            fecha_fin=fecha_fin,
            estado='Activa',
            status=True,
            fecha_creacion=datetime.now(),
            fecha_actualizacion=datetime.now()
        )
        
        # 11. Crear Tipos de Evaluaci√≥n
        print('üìä Creando Tipos de Evaluaci√≥n...')
        tipos_evaluacion = [
            {'nombre': 'Evaluaci√≥n de Desempe√±o 360¬∞', 'descripcion': 'Evaluaci√≥n integral de desempe√±o'},
            {'nombre': 'Evaluaci√≥n de Competencias', 'descripcion': 'Evaluaci√≥n de competencias t√©cnicas y blandas'},
            {'nombre': 'Evaluaci√≥n de Clima Laboral', 'descripcion': 'Evaluaci√≥n del ambiente de trabajo'},
            {'nombre': 'Evaluaci√≥n de Satisfacci√≥n', 'descripcion': 'Evaluaci√≥n de satisfacci√≥n laboral'},
            {'nombre': 'Evaluaci√≥n de Liderazgo', 'descripcion': 'Evaluaci√≥n de habilidades de liderazgo'}
        ]
        
        tipos_obj = []
        for tipo_data in tipos_evaluacion:
            tipo = TipoEvaluacion.objects.create(
                nombre=tipo_data['nombre'],
                descripcion=tipo_data['descripcion']
            )
            tipos_obj.append(tipo)
        
        # 12. Crear Evaluaciones de Ejemplo
        print('üìù Creando Evaluaciones de Ejemplo...')
        evaluaciones_data = [
            {
                'titulo': 'Evaluaci√≥n de Desempe√±o Q1 2025',
                'descripcion': 'Evaluaci√≥n de desempe√±o del primer trimestre',
                'tipo': tipos_obj[0],
                'activa': True
            },
            {
                'titulo': 'Evaluaci√≥n de Competencias T√©cnicas',
                'descripcion': 'Evaluaci√≥n de competencias t√©cnicas espec√≠ficas',
                'tipo': tipos_obj[1],
                'activa': True
            },
            {
                'titulo': 'Clima Laboral 2025',
                'descripcion': 'Evaluaci√≥n anual de clima laboral',
                'tipo': tipos_obj[2],
                'activa': False
            }
        ]
        
        for eval_data in evaluaciones_data:
            evaluacion = EvaluacionCompleta.objects.create(
                titulo=eval_data['titulo'],
                descripcion=eval_data['descripcion'],
                tipo_evaluacion=eval_data['tipo'].id,
                empresa_id=empresa_axyoma.empresa_id,
                activa=eval_data['activa'],
                fecha_creacion=datetime.now(),
                identificador_unico=f"EVAL-{datetime.now().strftime('%Y%m%d')}-{eval_data['titulo'][:10].upper()}"
            )
    
    print('‚úÖ DATOS INICIALES CREADOS EXITOSAMENTE')
    print('=' * 60)
    print('üìã RESUMEN DE DATOS CREADOS:')
    print(f'‚Ä¢ Empresa: {Empresa.objects.count()}')
    print(f'‚Ä¢ Usuarios: {User.objects.count()}')
    print(f'‚Ä¢ Plantas: {Planta.objects.count()}')
    print(f'‚Ä¢ Departamentos: {Departamento.objects.count()}')
    print(f'‚Ä¢ Puestos: {Puesto.objects.count()}')
    print(f'‚Ä¢ Empleados: {Empleado.objects.count()}')
    print(f'‚Ä¢ Planes: {PlanSuscripcion.objects.count()}')
    print(f'‚Ä¢ Suscripciones: {SuscripcionEmpresa.objects.count()}')
    print(f'‚Ä¢ Tipos de Evaluaci√≥n: {TipoEvaluacion.objects.count()}')
    print(f'‚Ä¢ Evaluaciones: {EvaluacionCompleta.objects.count()}')
    print('=' * 60)
    print('üîë CREDENCIALES DE ACCESO:')
    print('SuperAdmin:')
    print('  Usuario: superadmin')
    print('  Contrase√±a: admin123')
    print()
    print('Admin Empresa (Axyoma):')
    print('  Usuario: admin_axyoma')
    print('  Contrase√±a: admin123')
    print()
    print('Usuarios Planta:')
    print('  Usuario: planta_1')
    print('  Usuario: planta_2')
    print('  Contrase√±a: planta123')
    print('=' * 60)

def main():
    """Funci√≥n principal"""
    print('üöÄ INICIALIZANDO SISTEMA AXYOMA')
    print('=' * 60)
    
    try:
        # Limpiar base de datos
        limpiar_base_datos()
        
        # Crear datos iniciales
        crear_datos_iniciales()
        
        print('üéâ SISTEMA INICIALIZADO EXITOSAMENTE')
        
    except Exception as e:
        print(f'‚ùå ERROR: {e}')
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
