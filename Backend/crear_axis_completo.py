#!/usr/bin/env python
"""
Crear/corregir usuario axis con credenciales correctas
"""
import os
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from django.contrib.auth.models import User
from django.contrib.auth import authenticate
from apps.users.models import PerfilUsuario, Empresa

print("üîß CREANDO/CORRIGIENDO USUARIO AXIS")
print("=" * 50)

try:
    # Intentar obtener el usuario axis
    try:
        user = User.objects.get(username='axis')
        print(f"‚úÖ Usuario 'axis' encontrado")
    except User.DoesNotExist:
        print("‚ùå Usuario 'axis' no existe - cre√°ndolo...")
        user = User.objects.create_user(
            username='axis',
            email='axis@gmail.com',
            password='123',
            first_name='Axis',
            last_name='User'
        )
        print("‚úÖ Usuario 'axis' creado")

    # Asegurar que est√© activo
    user.is_active = True
    user.set_password('123')  # Establecer contrase√±a expl√≠citamente
    user.save()
    print(f"‚úÖ Usuario activado y contrase√±a establecida")

    # Verificar autenticaci√≥n inmediatamente
    auth_test = authenticate(username='axis', password='123')
    if auth_test:
        print("‚úÖ Autenticaci√≥n con Django: EXITOSA")
    else:
        print("‚ùå Autenticaci√≥n con Django: FALLIDA")
        
        # Intentar con diferentes m√©todos
        print("üîÑ Intentando con diferentes configuraciones...")
        
        # M√©todo 1: Cambiar contrase√±a directamente
        user.set_password('123')
        user.save()
        
        # M√©todo 2: Verificar que no hay espacios
        test_passwords = ['123', ' 123', '123 ', ' 123 ']
        for pwd in test_passwords:
            user.set_password(pwd.strip())
            user.save()
            auth_test = authenticate(username='axis', password=pwd.strip())
            if auth_test:
                print(f"‚úÖ Autenticaci√≥n exitosa con: '{pwd.strip()}'")
                break
        else:
            print("‚ùå No se pudo establecer autenticaci√≥n")

    # Verificar/crear perfil
    try:
        perfil = user.perfil
        print(f"‚úÖ Perfil encontrado: {perfil.nivel_usuario}")
    except:
        print("‚ùå Perfil no encontrado - cre√°ndolo...")
        perfil = PerfilUsuario.objects.create(
            user=user,
            nombre='Axis',
            apellido_paterno='User',
            correo='axis@gmail.com',
            nivel_usuario='admin-empresa'
        )
        print("‚úÖ Perfil creado")

    # Verificar/crear empresa
    try:
        empresa = Empresa.objects.get(administrador=perfil)
        print(f"‚úÖ Empresa encontrada: {empresa.nombre}")
    except:
        print("‚ùå Empresa no encontrada - cre√°ndola...")
        empresa = Empresa.objects.create(
            nombre='Axis Company',
            rfc='AXIS123456789',
            direccion='Calle Axis 123',
            telefono_contacto='1234567890',
            email_contacto='axis@gmail.com',
            administrador=perfil,
            status=True
        )
        print("‚úÖ Empresa creada")

    # Verificar estado final
    print(f"\nüìä ESTADO FINAL:")
    print(f"   Usuario: {user.username}")
    print(f"   Email: {user.email}")
    print(f"   Activo: {user.is_active}")
    print(f"   Perfil: {perfil.nivel_usuario}")
    print(f"   Empresa: {empresa.nombre}")
    print(f"   Empresa activa: {empresa.status}")

    # Prueba final de autenticaci√≥n
    final_auth = authenticate(username='axis', password='123')
    if final_auth:
        print(f"\n‚úÖ AUTENTICACI√ìN FINAL: EXITOSA")
        print(f"üéØ Credenciales confirmadas:")
        print(f"   Usuario: axis")
        print(f"   Contrase√±a: 123")
    else:
        print(f"\n‚ùå AUTENTICACI√ìN FINAL: FALLIDA")
        
        # √öltima tentativa con contrase√±a alternativa
        user.set_password('password123')
        user.save()
        alt_auth = authenticate(username='axis', password='password123')
        if alt_auth:
            print(f"‚úÖ Autenticaci√≥n exitosa con contrase√±a alternativa")
            print(f"üéØ Credenciales finales:")
            print(f"   Usuario: axis")
            print(f"   Contrase√±a: password123")
        else:
            print(f"‚ùå No se pudo establecer autenticaci√≥n")

except Exception as e:
    print(f"‚ùå Error: {e}")
    import traceback
    traceback.print_exc()

print(f"\n{'='*50}")
print("üéØ INTENTA HACER LOGIN AHORA")
print("=" * 50)
